# Copyright (c) , Matteo Franci a.k.a. Fugerit
#
# version : 1.0.0
#
name: 'Maven build and scan GitHub action'
description: 'CI steps for maven projects'
branding:
  icon: 'activity'
  color: 'light-blue'
inputs:
  github-token:
    description: 'Github authorization token'
    required: true
  java-type:
    description: 'openjdk | native'
    required: true
    default: 'openjdk'
  java-version:
    description: 'Java version'
    required: true
    default: '21'
  java-distribution:
    description: 'Java distribution'
    required: true
    default: 'corretto'
  maven-version:
    description: 'Maven version'
    required: true
    default: '3.9.6'
  maven-options:
    description: 'Maven goal and options'
    required: true
    default: '-B clean package'
  node-version:
    description: 'Node version'
    required: false
    default: '20'
  docker-context:
    description: 'Docker context'
    required: true
    default: '.'
  docker-file:
    description: 'Docker file'
    required: true
    default: 'Dockerfile'
  docker-tags:
    description: 'Comma separated image tags'
    required: true
    default: 'latest'
  docker-platforms:
    description: 'Comma separated platforms'
    required: true
    default: 'linux/amd64'
  dockerhub-username:
    description: 'Username for docker hub login'
    required: false
  dockerhub-password:
    description: 'Password for docker hub login'
    required: false

runs:
  using: 'composite'

  steps:
    - uses: actions/checkout@main
      with:
        # Shallow clones should be disabled for a better relevancy of analysis
        fetch-depth: 0

    # if parameter java-type != native
    - name: Set up JDK (version / vendor)
      if: ${{ inputs.java-type != 'native' }}
      uses: actions/setup-java@main
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.java-distribution }}
        cache: 'maven'

    # if parameter java-type != native
    - name: Set up Java Native (version / vendor)
      if: ${{ inputs.java-type == 'native' }}
      uses: graalvm/setup-graalvm@main
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.java-distribution }}
        github-token: ${{ inputs.github-token }}
        native-image-job-reports: 'true'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: ${{ inputs.maven-version }}

    - name: Cache Maven packages
      uses: actions/cache@main
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - uses: actions/setup-node@main
      with:
        node-version: ${{ inputs.node-version }}

    - name: System info
      shell: bash
      run: mvn -v; node -v;

    - name: Maven vuild
      shell: bash
      run: mvn ${{ inputs.maven-options }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@master
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@master

    - name: Login to Docker Hub
      if: ${{ inputs.dockerhub-username != '' && inputs.dockerhub-password != '' }}
      uses: docker/login-action@master
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-password }}

    - name: Build and push
      uses: docker/build-push-action@master
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.docker-file }}
        platforms: ${{ inputs.docker-platforms }}
        push: ${{ inputs.dockerhub-username != '' && inputs.dockerhub-password != '' }}
        tags: ${{ inputs.docker-tags }}